<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.model.mapper.QueryWalletBasicDataMapper" >
  <resultMap id="BaseResultMap" type="com.model.entity.QueryWalletBasicData" >
    <id column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="stat_date" property="statDate" jdbcType="DATE" />
    <result column="wallet_purchase_amount_day" property="walletPurchaseAmountDay" jdbcType="DECIMAL" />
    <result column="redem_debpt_purchase_amount_day" property="redemDebptPurchaseAmountDay" jdbcType="DECIMAL" />
    <result column="base_debpt_purchase_amount_day" property="baseDebptPurchaseAmountDay" jdbcType="DECIMAL" />
    <result column="base_debpt_purchase_amount_ttl" property="baseDebptPurchaseAmountTtl" jdbcType="DECIMAL" />
    <result column="redem_debpt_apply_amount_day" property="redemDebptApplyAmountDay" jdbcType="DECIMAL" />
    <result column="redem_debpt_apply_balance_day" property="redemDebptApplyBalanceDay" jdbcType="DECIMAL" />
    <result column="borrower_repayment_today" property="borrowerRepaymentToday" jdbcType="DECIMAL" />
    <result column="borrower_repayment_total" property="borrowerRepaymentTotal" jdbcType="DECIMAL" />
    <result column="pay_interest_wallet" property="payInterestWallet" jdbcType="DECIMAL" />
    <result column="wallet_stock" property="walletStock" jdbcType="DECIMAL" />
    <result column="deal_interest_wallet" property="dealInterestWallet" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    gmt_create, stat_date, wallet_purchase_amount_day, redem_debpt_purchase_amount_day,
    base_debpt_purchase_amount_day, base_debpt_purchase_amount_ttl, redem_debpt_apply_amount_day,
    redem_debpt_apply_balance_day, borrower_repayment_today, borrower_repayment_total,
    pay_interest_wallet, wallet_stock, deal_interest_wallet
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.model.entity.QueryWalletBasicDataExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from st_wallet_basic_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.util.Date" >
    select
    <include refid="Base_Column_List" />
    from st_wallet_basic_data
    where gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.util.Date" >
    delete from st_wallet_basic_data
    where gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
  </delete>
  <delete id="deleteByExample" parameterType="com.model.entity.QueryWalletBasicDataExample" >
    delete from st_wallet_basic_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.model.entity.QueryWalletBasicData" >
    insert into st_wallet_basic_data (gmt_create, stat_date, wallet_purchase_amount_day,
    redem_debpt_purchase_amount_day, base_debpt_purchase_amount_day,
    base_debpt_purchase_amount_ttl, redem_debpt_apply_amount_day,
    redem_debpt_apply_balance_day, borrower_repayment_today,
    borrower_repayment_total, pay_interest_wallet,
    wallet_stock, deal_interest_wallet)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{statDate,jdbcType=DATE}, #{walletPurchaseAmountDay,jdbcType=DECIMAL},
    #{redemDebptPurchaseAmountDay,jdbcType=DECIMAL}, #{baseDebptPurchaseAmountDay,jdbcType=DECIMAL},
    #{baseDebptPurchaseAmountTtl,jdbcType=DECIMAL}, #{redemDebptApplyAmountDay,jdbcType=DECIMAL},
    #{redemDebptApplyBalanceDay,jdbcType=DECIMAL}, #{borrowerRepaymentToday,jdbcType=DECIMAL},
    #{borrowerRepaymentTotal,jdbcType=DECIMAL}, #{payInterestWallet,jdbcType=DECIMAL},
    #{walletStock,jdbcType=DECIMAL}, #{dealInterestWallet,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.model.entity.QueryWalletBasicData" >
    insert into st_wallet_basic_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="statDate != null" >
        stat_date,
      </if>
      <if test="walletPurchaseAmountDay != null" >
        wallet_purchase_amount_day,
      </if>
      <if test="redemDebptPurchaseAmountDay != null" >
        redem_debpt_purchase_amount_day,
      </if>
      <if test="baseDebptPurchaseAmountDay != null" >
        base_debpt_purchase_amount_day,
      </if>
      <if test="baseDebptPurchaseAmountTtl != null" >
        base_debpt_purchase_amount_ttl,
      </if>
      <if test="redemDebptApplyAmountDay != null" >
        redem_debpt_apply_amount_day,
      </if>
      <if test="redemDebptApplyBalanceDay != null" >
        redem_debpt_apply_balance_day,
      </if>
      <if test="borrowerRepaymentToday != null" >
        borrower_repayment_today,
      </if>
      <if test="borrowerRepaymentTotal != null" >
        borrower_repayment_total,
      </if>
      <if test="payInterestWallet != null" >
        pay_interest_wallet,
      </if>
      <if test="walletStock != null" >
        wallet_stock,
      </if>
      <if test="dealInterestWallet != null" >
        deal_interest_wallet,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="statDate != null" >
        #{statDate,jdbcType=DATE},
      </if>
      <if test="walletPurchaseAmountDay != null" >
        #{walletPurchaseAmountDay,jdbcType=DECIMAL},
      </if>
      <if test="redemDebptPurchaseAmountDay != null" >
        #{redemDebptPurchaseAmountDay,jdbcType=DECIMAL},
      </if>
      <if test="baseDebptPurchaseAmountDay != null" >
        #{baseDebptPurchaseAmountDay,jdbcType=DECIMAL},
      </if>
      <if test="baseDebptPurchaseAmountTtl != null" >
        #{baseDebptPurchaseAmountTtl,jdbcType=DECIMAL},
      </if>
      <if test="redemDebptApplyAmountDay != null" >
        #{redemDebptApplyAmountDay,jdbcType=DECIMAL},
      </if>
      <if test="redemDebptApplyBalanceDay != null" >
        #{redemDebptApplyBalanceDay,jdbcType=DECIMAL},
      </if>
      <if test="borrowerRepaymentToday != null" >
        #{borrowerRepaymentToday,jdbcType=DECIMAL},
      </if>
      <if test="borrowerRepaymentTotal != null" >
        #{borrowerRepaymentTotal,jdbcType=DECIMAL},
      </if>
      <if test="payInterestWallet != null" >
        #{payInterestWallet,jdbcType=DECIMAL},
      </if>
      <if test="walletStock != null" >
        #{walletStock,jdbcType=DECIMAL},
      </if>
      <if test="dealInterestWallet != null" >
        #{dealInterestWallet,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.entity.QueryWalletBasicDataExample" resultType="java.lang.Integer" >
    select count(*) from st_wallet_basic_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update st_wallet_basic_data
    <set >
      <if test="record.gmtCreate != null" >
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statDate != null" >
        stat_date = #{record.statDate,jdbcType=DATE},
      </if>
      <if test="record.walletPurchaseAmountDay != null" >
        wallet_purchase_amount_day = #{record.walletPurchaseAmountDay,jdbcType=DECIMAL},
      </if>
      <if test="record.redemDebptPurchaseAmountDay != null" >
        redem_debpt_purchase_amount_day = #{record.redemDebptPurchaseAmountDay,jdbcType=DECIMAL},
      </if>
      <if test="record.baseDebptPurchaseAmountDay != null" >
        base_debpt_purchase_amount_day = #{record.baseDebptPurchaseAmountDay,jdbcType=DECIMAL},
      </if>
      <if test="record.baseDebptPurchaseAmountTtl != null" >
        base_debpt_purchase_amount_ttl = #{record.baseDebptPurchaseAmountTtl,jdbcType=DECIMAL},
      </if>
      <if test="record.redemDebptApplyAmountDay != null" >
        redem_debpt_apply_amount_day = #{record.redemDebptApplyAmountDay,jdbcType=DECIMAL},
      </if>
      <if test="record.redemDebptApplyBalanceDay != null" >
        redem_debpt_apply_balance_day = #{record.redemDebptApplyBalanceDay,jdbcType=DECIMAL},
      </if>
      <if test="record.borrowerRepaymentToday != null" >
        borrower_repayment_today = #{record.borrowerRepaymentToday,jdbcType=DECIMAL},
      </if>
      <if test="record.borrowerRepaymentTotal != null" >
        borrower_repayment_total = #{record.borrowerRepaymentTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.payInterestWallet != null" >
        pay_interest_wallet = #{record.payInterestWallet,jdbcType=DECIMAL},
      </if>
      <if test="record.walletStock != null" >
        wallet_stock = #{record.walletStock,jdbcType=DECIMAL},
      </if>
      <if test="record.dealInterestWallet != null" >
        deal_interest_wallet = #{record.dealInterestWallet,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update st_wallet_basic_data
    set gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
    stat_date = #{record.statDate,jdbcType=DATE},
    wallet_purchase_amount_day = #{record.walletPurchaseAmountDay,jdbcType=DECIMAL},
    redem_debpt_purchase_amount_day = #{record.redemDebptPurchaseAmountDay,jdbcType=DECIMAL},
    base_debpt_purchase_amount_day = #{record.baseDebptPurchaseAmountDay,jdbcType=DECIMAL},
    base_debpt_purchase_amount_ttl = #{record.baseDebptPurchaseAmountTtl,jdbcType=DECIMAL},
    redem_debpt_apply_amount_day = #{record.redemDebptApplyAmountDay,jdbcType=DECIMAL},
    redem_debpt_apply_balance_day = #{record.redemDebptApplyBalanceDay,jdbcType=DECIMAL},
    borrower_repayment_today = #{record.borrowerRepaymentToday,jdbcType=DECIMAL},
    borrower_repayment_total = #{record.borrowerRepaymentTotal,jdbcType=DECIMAL},
    pay_interest_wallet = #{record.payInterestWallet,jdbcType=DECIMAL},
    wallet_stock = #{record.walletStock,jdbcType=DECIMAL},
    deal_interest_wallet = #{record.dealInterestWallet,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.entity.QueryWalletBasicData" >
    update st_wallet_basic_data
    <set >
      <if test="statDate != null" >
        stat_date = #{statDate,jdbcType=DATE},
      </if>
      <if test="walletPurchaseAmountDay != null" >
        wallet_purchase_amount_day = #{walletPurchaseAmountDay,jdbcType=DECIMAL},
      </if>
      <if test="redemDebptPurchaseAmountDay != null" >
        redem_debpt_purchase_amount_day = #{redemDebptPurchaseAmountDay,jdbcType=DECIMAL},
      </if>
      <if test="baseDebptPurchaseAmountDay != null" >
        base_debpt_purchase_amount_day = #{baseDebptPurchaseAmountDay,jdbcType=DECIMAL},
      </if>
      <if test="baseDebptPurchaseAmountTtl != null" >
        base_debpt_purchase_amount_ttl = #{baseDebptPurchaseAmountTtl,jdbcType=DECIMAL},
      </if>
      <if test="redemDebptApplyAmountDay != null" >
        redem_debpt_apply_amount_day = #{redemDebptApplyAmountDay,jdbcType=DECIMAL},
      </if>
      <if test="redemDebptApplyBalanceDay != null" >
        redem_debpt_apply_balance_day = #{redemDebptApplyBalanceDay,jdbcType=DECIMAL},
      </if>
      <if test="borrowerRepaymentToday != null" >
        borrower_repayment_today = #{borrowerRepaymentToday,jdbcType=DECIMAL},
      </if>
      <if test="borrowerRepaymentTotal != null" >
        borrower_repayment_total = #{borrowerRepaymentTotal,jdbcType=DECIMAL},
      </if>
      <if test="payInterestWallet != null" >
        pay_interest_wallet = #{payInterestWallet,jdbcType=DECIMAL},
      </if>
      <if test="walletStock != null" >
        wallet_stock = #{walletStock,jdbcType=DECIMAL},
      </if>
      <if test="dealInterestWallet != null" >
        deal_interest_wallet = #{dealInterestWallet,jdbcType=DECIMAL},
      </if>
    </set>
    where gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.entity.QueryWalletBasicData" >
    update st_wallet_basic_data
    set stat_date = #{statDate,jdbcType=DATE},
    wallet_purchase_amount_day = #{walletPurchaseAmountDay,jdbcType=DECIMAL},
    redem_debpt_purchase_amount_day = #{redemDebptPurchaseAmountDay,jdbcType=DECIMAL},
    base_debpt_purchase_amount_day = #{baseDebptPurchaseAmountDay,jdbcType=DECIMAL},
    base_debpt_purchase_amount_ttl = #{baseDebptPurchaseAmountTtl,jdbcType=DECIMAL},
    redem_debpt_apply_amount_day = #{redemDebptApplyAmountDay,jdbcType=DECIMAL},
    redem_debpt_apply_balance_day = #{redemDebptApplyBalanceDay,jdbcType=DECIMAL},
    borrower_repayment_today = #{borrowerRepaymentToday,jdbcType=DECIMAL},
    borrower_repayment_total = #{borrowerRepaymentTotal,jdbcType=DECIMAL},
    pay_interest_wallet = #{payInterestWallet,jdbcType=DECIMAL},
    wallet_stock = #{walletStock,jdbcType=DECIMAL},
    deal_interest_wallet = #{dealInterestWallet,jdbcType=DECIMAL}
    where gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
  </update>
</mapper>